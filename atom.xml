<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Nikita Leshenko's Blog]]></title>
  <link href="http://blog.leshenko.net/atom.xml" rel="self"/>
  <link href="http://blog.leshenko.net/"/>
  <updated>2014-01-17T18:58:08+02:00</updated>
  <id>http://blog.leshenko.net/</id>
  <author>
    <name><![CDATA[Nikita Leshenko]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    
    <title type="html"><![CDATA[Integrate GameCircle with an Ant Project]]></title>
    <link href="http://blog.leshenko.net/2014/01/17/integrate-game-circle-with-ant/"/>
    
    <updated>2014-01-17T13:24:00+02:00</updated>
    <id>http://blog.leshenko.net/2014/01/17/integrate-game-circle-with-ant</id>
    
    <content type="html"><![CDATA[<p>I was integrating an Android game with GameCircle by following Amazon&rsquo;s
<a href="https://developer.amazon.com/public/apis/engage/gamecircle/docs/get-ready-android">documentation</a>,
and I eventually arrived to <a href="https://developer.amazon.com/public/apis/engage/gamecircle/docs/initialize-android">&ldquo;Initializing GameCircle in Your Game&rdquo;</a>.
The documentation instructs to import GameCircle SDK into Eclipse&rsquo;s workspace
and add it as a dependency. Since I wasn&rsquo;t using Eclipse, I had to setup
the dependency using Ant.</p>

<p>GameCircle SDK looks like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>GameCircleSDK/
</span><span class='line'>├── AndroidManifest.xml
</span><span class='line'>├── bin
</span><span class='line'>│   └── placeholder.txt
</span><span class='line'>├── gen
</span><span class='line'>│   └── placeholder.txt
</span><span class='line'>├── jni
</span><span class='line'>│   ├── includes
</span><span class='line'>│   │   └── ...
</span><span class='line'>│   └── libAmazonGamesJni.so
</span><span class='line'>├── libs
</span><span class='line'>│   ├── AmazonInsights-android-sdk-2.1.16.jar
</span><span class='line'>│   ├── gamecirclesdk.jar
</span><span class='line'>│   └── login-with-amazon-sdk.jar
</span><span class='line'>├── project.properties
</span><span class='line'>└── res
</span><span class='line'>    ├── drawable
</span><span class='line'>    │   └── rounded_corners.xml
</span><span class='line'>    ├── layout
</span><span class='line'>    │   └── modal_overlay_container.xml
</span><span class='line'>    ├── raw
</span><span class='line'>    │   └── amazon_gc_prototype.zip
</span><span class='line'>    └── values
</span><span class='line'>        └── amazon_gc_styles.xml</span></code></pre></td></tr></table></div></figure>


<p>The obvious and easy solution is to merge all these files into my project. It
would work, but I would prefer to keep the SDK external to my source tree to
make updates easier. It can be done in two easy steps.</p>

<h2>Step 1 &ndash; Add GameCircle as a reference</h2>

<p>In my project, I first added the SDK path to <code>local.properties</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sdk.gamecircle=../../../tools/Amazon-SDK/Android/GameCircle/GameCircleSDK/</span></code></pre></td></tr></table></div></figure>


<p>This file isn&rsquo;t checked into source control, so it&rsquo;s a good place to put a
machine-specific path. The path must be relative, because Ant treats <code>/</code> as
the base of the project and not the root of the file system. Then I referenced
the SDK in <code>project.properties</code>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>android.library.reference.1=${sdk.gamecircle}</span></code></pre></td></tr></table></div></figure>


<p>When I tried to compile, I got an error:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>BUILD FAILED
</span><span class='line'>/.../tools/ant/build.xml:601: Invalid file: /.../GameCircleSDK/build.xml</span></code></pre></td></tr></table></div></figure>


<h2>Step 2 &ndash; Prepare GameCircle for Ant</h2>

<p>In GameCircle SDK, generate <code>build.xml</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>android update lib-project --path /path/to/gamecirclesdk</span></code></pre></td></tr></table></div></figure>


<p>Still one error remaining:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>BUILD FAILED
</span><span class='line'>/.../ant/build.xml:659: /.../GameCircleSDK/src does not exist.</span></code></pre></td></tr></table></div></figure>


<p>I just created an empty directory named <code>src</code>, and the project compiled
successfully.</p>

<p>Done! I could continue following the documentation.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Compressing PDFs with Ghostscript]]></title>
    <link href="http://blog.leshenko.net/2013/11/16/compressing-pdfs-with-ghostscript/"/>
    
    <updated>2013-11-16T15:52:00+02:00</updated>
    <id>http://blog.leshenko.net/2013/11/16/compressing-pdfs-with-ghostscript</id>
    
    <content type="html"><![CDATA[<p>Previously, I was using Photoshop to processed scanned documents, convert them
to PDFs and compress the PDF. The resulting PDFs were usually less than 800KB
and that was OK for me. Lately I started using GIMP instead of Photoshop for
this task and the PDFs that GIMP produced were a few megabytes in size. I
looked for a way to compress them and found a nice utility called Ghostscript
that processes PDFs and PostScript files. Here&rsquo;s a script I found to compress
PDFs using Ghostscript:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="nb">set</span> -e
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$#&quot;</span> -ne 1 <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;Usage: $0 pdf-file&quot;</span> &gt;&amp;2
</span><span class='line'>  <span class="nb">echo</span> <span class="s2">&quot;Compresses a PDF file using ghostscript&quot;</span> &gt;&amp;2
</span><span class='line'>  <span class="nb">exit </span>1
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'><span class="nv">TMP_FILE</span><span class="o">=</span>/tmp/<span class="k">$(</span>basename <span class="s2">&quot;$1&quot;</span><span class="k">)</span>
</span><span class='line'>mv <span class="s2">&quot;$1&quot;</span> <span class="s2">&quot;$TMP_FILE&quot;</span>
</span><span class='line'>gs    -q -dNOPAUSE -dBATCH -dSAFER <span class="se">\</span>
</span><span class='line'>    -sDEVICE<span class="o">=</span>pdfwrite <span class="se">\</span>
</span><span class='line'>    -dCompatibilityLevel<span class="o">=</span>1.3 <span class="se">\</span>
</span><span class='line'>    -dEmbedAllFonts<span class="o">=</span><span class="nb">true</span> <span class="se">\</span>
</span><span class='line'>    -dSubsetFonts<span class="o">=</span><span class="nb">true</span> <span class="se">\</span>
</span><span class='line'>    -dColorImageDownsampleType<span class="o">=</span>/Bicubic <span class="se">\</span>
</span><span class='line'>    -dColorImageResolution<span class="o">=</span>72 <span class="se">\</span>
</span><span class='line'>    -dGrayImageDownsampleType<span class="o">=</span>/Bicubic <span class="se">\</span>
</span><span class='line'>    -dGrayImageResolution<span class="o">=</span>72 <span class="se">\</span>
</span><span class='line'>    -dMonoImageDownsampleType<span class="o">=</span>/Bicubic <span class="se">\</span>
</span><span class='line'>    -dMonoImageResolution<span class="o">=</span>72 <span class="se">\</span>
</span><span class='line'>    -sOutputFile<span class="o">=</span><span class="s2">&quot;$1&quot;</span> <span class="se">\</span>
</span><span class='line'>    <span class="s2">&quot;$TMP_FILE&quot;</span>
</span><span class='line'><span class="c"># rm &quot;$TMP_FILE&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The last line that removes the temporary file is optional because I would like
to have a copy of the original file if the compression ends up looking too
bad.</p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Powerline Segments not Showing Up in tmux]]></title>
    <link href="http://blog.leshenko.net/2013/11/16/powerline-segments-not-showing-up-in-tmux/"/>
    
    <updated>2013-11-16T14:48:00+02:00</updated>
    <id>http://blog.leshenko.net/2013/11/16/powerline-segments-not-showing-up-in-tmux</id>
    
    <content type="html"><![CDATA[<p>Note to self.</p>

<p>When I set up a new Mac, I like to install Powerline for tmux. Powerline
documentation recommends installing using:</p>

<pre><code>pip install --user git+git://github.com/Lokaltog/powerline
</code></pre>

<p>This install Powerline into the user directory, to
<code>~/Library/Python/2.7/lib/python/site-packages/powerline</code>. When I fire up tmux
I don&rsquo;t get the &ldquo;segments&rdquo; that are usually found at the bottom right of the
screen. This happens because they rely on the <code>powerline</code> executable, which
was installed to <code>~/Library/Python/2.7/bin/</code>. This path isn&rsquo;t in my $PATH by
default.</p>

<p><strong>Solution</strong>: Add <code>~/Library/Python/2.7/bin/</code> to $PATH.</p>

<p><img src="http://blog.leshenko.net/uploads/2013/tmux_segments.png"></p>
]]></content>
    
  </entry>
  
  <entry>
    
    <title type="html"><![CDATA[Testing Octopress]]></title>
    <link href="http://blog.leshenko.net/2013/09/05/testing-octopress/"/>
    
    <updated>2013-09-05T18:49:00+03:00</updated>
    <id>http://blog.leshenko.net/2013/09/05/testing-octopress</id>
    
    <content type="html"><![CDATA[<p>Blog running on Octopress running on Jekyll running on Github Pages sounds like
fun.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&#39;Adding numbers </span><span class="si">%d</span><span class="s"> and </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">result</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
    
  </entry>
  
</feed>